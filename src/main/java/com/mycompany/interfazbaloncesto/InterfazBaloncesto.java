package com.mycompany.interfazbaloncesto;

import java.awt.BorderLayout;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JPanel;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.data.general.DefaultPieDataset;
import java.awt.Color;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JSpinner;
import org.jfree.data.category.DefaultCategoryDataset;
/**
 *
 * @author walth
 */
public class InterfazBaloncesto extends javax.swing.JFrame {
    
    WritingToExcel wte;
    GetDataExcel gde;
    
    CreateGraphics cg;
    CombinedChartExample cce;
    CreateLineChart clc;
    
    HashMap<JSpinner,Integer> mapOldValuesSpinners;
    HashMap<String, HashMap<String, String>> teamsDirectory;
    
    
    /**
     * Creates new form NewJFrame
     */
    public InterfazBaloncesto() {
        
        this.wte = new WritingToExcel();
        this.gde = new GetDataExcel();
        this.cg = new CreateGraphics();
        
        this.cce = new CombinedChartExample();
        this.clc = new CreateLineChart();
        
        
        
        this.mapOldValuesSpinners = new HashMap<>();
        this.teamsDirectory = getDirectoryTreeTeams();
        
        initComponents();
        
        JSpinner[] spinners = {spinnerT1a,spinnerT2a,spinnerT3a,spinnerTli,spinnerT2i,spinnerT3i,spinnerP};
        
        // inicializa los spinner a 0 en el mapa de los valores viejos de spinner
        // esto es para que despues estos valores me ayuden a la hora de autocompletar
        // ciertos spinners con datos relecantes
        for (JSpinner spinner : spinners){
            mapOldValuesSpinners.put(spinner,0);
        }
         
        // logotipo de la app
        setIconImage(new ImageIcon(getClass().getResource("/images/logoCalBal.png")).getImage());
        
        // mini graficos
        generateGenericGraphics();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        PantallaPrincipal = new javax.swing.JPanel();
        panelCabecera = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        tabEstadisticas = new javax.swing.JPanel();
        PantallaDatos = new javax.swing.JPanel();
        panelFormulario1 = new javax.swing.JPanel();
        txtEquipo = new javax.swing.JLabel();
        comboEquipos = new javax.swing.JComboBox<>();
        txtJugador = new javax.swing.JLabel();
        comboJugadores = new javax.swing.JComboBox<>();
        txtAsis = new javax.swing.JLabel();
        spinnerAsis = new javax.swing.JSpinner();
        txtReb = new javax.swing.JLabel();
        spinnerReb = new javax.swing.JSpinner();
        txtTf = new javax.swing.JLabel();
        spinnerTf = new javax.swing.JSpinner();
        txtBr = new javax.swing.JLabel();
        spinnerBr = new javax.swing.JSpinner();
        txtFr = new javax.swing.JLabel();
        spinnerFr = new javax.swing.JSpinner();
        txtT1A = new javax.swing.JLabel();
        spinnerT1a = new javax.swing.JSpinner();
        txtT2a = new javax.swing.JLabel();
        spinnerT2a = new javax.swing.JSpinner();
        txtT3a = new javax.swing.JLabel();
        spinnerT3a = new javax.swing.JSpinner();
        fondoDatos = new javax.swing.JLabel();
        PantallaDatos1 = new javax.swing.JPanel();
        panelFormulario = new javax.swing.JPanel();
        txtTc = new javax.swing.JLabel();
        spinnerTc = new javax.swing.JSpinner();
        jLabel11 = new javax.swing.JLabel();
        spinnerFp = new javax.swing.JSpinner();
        txtTli = new javax.swing.JLabel();
        spinnerTli = new javax.swing.JSpinner();
        txtT2i = new javax.swing.JLabel();
        spinnerT2i = new javax.swing.JSpinner();
        txtT3i = new javax.swing.JLabel();
        spinnerT3i = new javax.swing.JSpinner();
        txtTca = new javax.swing.JLabel();
        spinnerTca = new javax.swing.JSpinner();
        txtTci = new javax.swing.JLabel();
        spinnerTci = new javax.swing.JSpinner();
        txtP = new javax.swing.JLabel();
        spinnerP = new javax.swing.JSpinner();
        txtBp = new javax.swing.JLabel();
        spinnerBp = new javax.swing.JSpinner();
        fondoDatos1 = new javax.swing.JLabel();
        botonCalcular = new javax.swing.JButton();
        botonGlosario = new javax.swing.JButton();
        botonResetear = new javax.swing.JButton();
        botonExcel = new javax.swing.JButton();
        cabeceraDatos = new javax.swing.JLabel();
        tabValoracion = new javax.swing.JPanel();
        PantallaResultados = new javax.swing.JPanel();
        ContenedorCajasResultados = new javax.swing.JPanel();
        panelEfg = new javax.swing.JPanel();
        txtEfg = new javax.swing.JLabel();
        resultadoEFG = new javax.swing.JLabel();
        donaEfg = new javax.swing.JPanel();
        fondoEfg = new javax.swing.JLabel();
        panelFg = new javax.swing.JPanel();
        txtFg = new javax.swing.JLabel();
        resultadoFG = new javax.swing.JLabel();
        donaFg = new javax.swing.JPanel();
        fondoFg = new javax.swing.JLabel();
        panelTs = new javax.swing.JPanel();
        txtTs = new javax.swing.JLabel();
        resultadoTs = new javax.swing.JLabel();
        donaTs = new javax.swing.JPanel();
        fondoTs = new javax.swing.JLabel();
        panelValoration = new javax.swing.JPanel();
        txtValoration = new javax.swing.JLabel();
        resultadoValoration = new javax.swing.JLabel();
        donaValoration = new javax.swing.JPanel();
        fondoValoration = new javax.swing.JLabel();
        cabeceraResultados = new javax.swing.JLabel();
        botonExcel1 = new javax.swing.JButton();
        botonExportar = new javax.swing.JButton();
        graphicsLineButton = new javax.swing.JButton();
        graphicsBarLineButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Calculadora de Estadisticas de la NBA");

        PantallaPrincipal.setBackground(new java.awt.Color(255, 255, 255));
        PantallaPrincipal.setPreferredSize(new java.awt.Dimension(730, 770));

        panelCabecera.setBackground(new java.awt.Color(0, 93, 53));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logtipoNBA.png"))); // NOI18N
        jLabel1.setText("Jugador");
        jLabel1.setToolTipText("");

        javax.swing.GroupLayout panelCabeceraLayout = new javax.swing.GroupLayout(panelCabecera);
        panelCabecera.setLayout(panelCabeceraLayout);
        panelCabeceraLayout.setHorizontalGroup(
            panelCabeceraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCabeceraLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelCabeceraLayout.setVerticalGroup(
            panelCabeceraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCabeceraLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.setBackground(new java.awt.Color(255, 255, 255));

        tabEstadisticas.setBackground(new java.awt.Color(255, 255, 255));
        tabEstadisticas.setPreferredSize(new java.awt.Dimension(730, 800));

        PantallaDatos.setBackground(new java.awt.Color(255, 255, 255));
        PantallaDatos.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelFormulario1.setBackground(new java.awt.Color(0, 93, 53));
        panelFormulario1.setToolTipText("");
        panelFormulario1.setLayout(new java.awt.GridBagLayout());

        txtEquipo.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        txtEquipo.setText("Equipo:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.ipadx = 15;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 3, 0);
        panelFormulario1.add(txtEquipo, gridBagConstraints);

        comboEquipos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Angeles Lakers", "Golden State Warriors" }));
        comboEquipos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboEquiposActionPerformed(evt);
            }
        });
        panelFormulario1.add(comboEquipos, new java.awt.GridBagConstraints());

        txtJugador.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        txtJugador.setText("Jugador:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 7, 13);
        panelFormulario1.add(txtJugador, gridBagConstraints);

        comboJugadores.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "LeBron James", "Anthony Davis", "Austin Reaves", "D Angelo Russell", "Rui Hachimura" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        panelFormulario1.add(comboJugadores, gridBagConstraints);

        txtAsis.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        txtAsis.setText("Asis:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 3, 0);
        panelFormulario1.add(txtAsis, gridBagConstraints);

        spinnerAsis.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        panelFormulario1.add(spinnerAsis, gridBagConstraints);

        txtReb.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        txtReb.setText("Reb:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 3, 0);
        panelFormulario1.add(txtReb, gridBagConstraints);

        spinnerReb.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        panelFormulario1.add(spinnerReb, gridBagConstraints);

        txtTf.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        txtTf.setText("TF:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 3, 0);
        panelFormulario1.add(txtTf, gridBagConstraints);

        spinnerTf.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        panelFormulario1.add(spinnerTf, gridBagConstraints);

        txtBr.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        txtBr.setText("BR:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 3, 0);
        panelFormulario1.add(txtBr, gridBagConstraints);

        spinnerBr.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        panelFormulario1.add(spinnerBr, gridBagConstraints);

        txtFr.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        txtFr.setText("FR:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 3, 0);
        panelFormulario1.add(txtFr, gridBagConstraints);

        spinnerFr.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        panelFormulario1.add(spinnerFr, gridBagConstraints);

        txtT1A.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        txtT1A.setText("T1A:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 3, 0);
        panelFormulario1.add(txtT1A, gridBagConstraints);

        spinnerT1a.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        spinnerT1a.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinnerT1aStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        panelFormulario1.add(spinnerT1a, gridBagConstraints);

        txtT2a.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        txtT2a.setText("T2A:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 3, 0);
        panelFormulario1.add(txtT2a, gridBagConstraints);

        spinnerT2a.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        spinnerT2a.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinnerT2aStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        panelFormulario1.add(spinnerT2a, gridBagConstraints);

        txtT3a.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        txtT3a.setText("T3A:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 3, 0);
        panelFormulario1.add(txtT3a, gridBagConstraints);

        spinnerT3a.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        spinnerT3a.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinnerT3aStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        panelFormulario1.add(spinnerT3a, gridBagConstraints);

        PantallaDatos.add(panelFormulario1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 280, 440));

        fondoDatos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/newFondoDatos.png"))); // NOI18N
        PantallaDatos.add(fondoDatos, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 500));

        PantallaDatos1.setBackground(new java.awt.Color(255, 255, 255));
        PantallaDatos1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelFormulario.setBackground(new java.awt.Color(0, 93, 53));
        panelFormulario.setToolTipText("");
        panelFormulario.setLayout(new java.awt.GridBagLayout());

        txtTc.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        txtTc.setText("TC:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 3, 0);
        panelFormulario.add(txtTc, gridBagConstraints);

        spinnerTc.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        panelFormulario.add(spinnerTc, gridBagConstraints);

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel11.setText("FP:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 3, 0);
        panelFormulario.add(jLabel11, gridBagConstraints);

        spinnerFp.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        panelFormulario.add(spinnerFp, gridBagConstraints);

        txtTli.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        txtTli.setText("TLI:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 3, 0);
        panelFormulario.add(txtTli, gridBagConstraints);

        spinnerTli.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        panelFormulario.add(spinnerTli, gridBagConstraints);

        txtT2i.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        txtT2i.setText("T2I:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 3, 0);
        panelFormulario.add(txtT2i, gridBagConstraints);

        spinnerT2i.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        spinnerT2i.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinnerT2iStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        panelFormulario.add(spinnerT2i, gridBagConstraints);

        txtT3i.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        txtT3i.setText("T3I:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 3, 0);
        panelFormulario.add(txtT3i, gridBagConstraints);

        spinnerT3i.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        spinnerT3i.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinnerT3iStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        panelFormulario.add(spinnerT3i, gridBagConstraints);

        txtTca.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        txtTca.setText("TCA:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 3, 0);
        panelFormulario.add(txtTca, gridBagConstraints);

        spinnerTca.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        spinnerTca.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinnerTcaStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        panelFormulario.add(spinnerTca, gridBagConstraints);

        txtTci.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        txtTci.setText("TCI:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 3, 0);
        panelFormulario.add(txtTci, gridBagConstraints);

        spinnerTci.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        panelFormulario.add(spinnerTci, gridBagConstraints);

        txtP.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        txtP.setText("P:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 3, 0);
        panelFormulario.add(txtP, gridBagConstraints);

        spinnerP.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        panelFormulario.add(spinnerP, gridBagConstraints);

        txtBp.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        txtBp.setText("BP:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(8, 0, 3, 0);
        panelFormulario.add(txtBp, gridBagConstraints);

        spinnerBp.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        panelFormulario.add(spinnerBp, gridBagConstraints);

        PantallaDatos1.add(panelFormulario, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 280, 440));

        fondoDatos1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/newFondoDatos.png"))); // NOI18N
        PantallaDatos1.add(fondoDatos1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 500));

        botonCalcular.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        botonCalcular.setText("Calcular");
        botonCalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCalcularActionPerformed(evt);
            }
        });

        botonGlosario.setText("Glosario");

        botonResetear.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        botonResetear.setText("Resetear");
        botonResetear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonResetearActionPerformed(evt);
            }
        });

        botonExcel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logoExcel.png"))); // NOI18N
        botonExcel.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                botonExcelFocusGained(evt);
            }
        });
        botonExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonExcelActionPerformed(evt);
            }
        });

        cabeceraDatos.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        cabeceraDatos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/IconoDatos.png"))); // NOI18N
        cabeceraDatos.setText("Datos:");

        javax.swing.GroupLayout tabEstadisticasLayout = new javax.swing.GroupLayout(tabEstadisticas);
        tabEstadisticas.setLayout(tabEstadisticasLayout);
        tabEstadisticasLayout.setHorizontalGroup(
            tabEstadisticasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabEstadisticasLayout.createSequentialGroup()
                .addGroup(tabEstadisticasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabEstadisticasLayout.createSequentialGroup()
                        .addGap(275, 275, 275)
                        .addComponent(cabeceraDatos))
                    .addGroup(tabEstadisticasLayout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(tabEstadisticasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(tabEstadisticasLayout.createSequentialGroup()
                                .addComponent(botonExcel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(botonCalcular, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39)
                                .addComponent(botonResetear)
                                .addGap(125, 125, 125)
                                .addComponent(botonGlosario))
                            .addGroup(tabEstadisticasLayout.createSequentialGroup()
                                .addComponent(PantallaDatos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39)
                                .addComponent(PantallaDatos1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        tabEstadisticasLayout.setVerticalGroup(
            tabEstadisticasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabEstadisticasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tabEstadisticasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(botonGlosario)
                    .addGroup(tabEstadisticasLayout.createSequentialGroup()
                        .addComponent(cabeceraDatos)
                        .addGap(18, 18, 18)
                        .addGroup(tabEstadisticasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(PantallaDatos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PantallaDatos1, javax.swing.GroupLayout.PREFERRED_SIZE, 502, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(tabEstadisticasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(tabEstadisticasLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(tabEstadisticasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(botonCalcular, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(botonResetear, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(tabEstadisticasLayout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(botonExcel)))))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Datos", tabEstadisticas);

        tabValoracion.setBackground(new java.awt.Color(255, 255, 255));

        PantallaResultados.setBackground(new java.awt.Color(255, 255, 255));
        PantallaResultados.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ContenedorCajasResultados.setBackground(new java.awt.Color(255, 255, 255));
        ContenedorCajasResultados.setLayout(new java.awt.GridBagLayout());

        panelEfg.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtEfg.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        txtEfg.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtEfg.setText("%eFG:");
        panelEfg.add(txtEfg, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 160, -1));

        resultadoEFG.setBackground(new java.awt.Color(255, 255, 255));
        resultadoEFG.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        resultadoEFG.setForeground(new java.awt.Color(255, 255, 255));
        resultadoEFG.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        resultadoEFG.setText("-%");
        panelEfg.add(resultadoEFG, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 160, 30));

        javax.swing.GroupLayout donaEfgLayout = new javax.swing.GroupLayout(donaEfg);
        donaEfg.setLayout(donaEfgLayout);
        donaEfgLayout.setHorizontalGroup(
            donaEfgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 150, Short.MAX_VALUE)
        );
        donaEfgLayout.setVerticalGroup(
            donaEfgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 130, Short.MAX_VALUE)
        );

        panelEfg.add(donaEfg, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 150, 130));

        fondoEfg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/newFondoEfg.png"))); // NOI18N
        panelEfg.add(fondoEfg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 180, 250));

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 13, 17, 13);
        ContenedorCajasResultados.add(panelEfg, gridBagConstraints);

        panelFg.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtFg.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        txtFg.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtFg.setText("%FG:");
        panelFg.add(txtFg, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 150, -1));

        resultadoFG.setBackground(new java.awt.Color(255, 255, 255));
        resultadoFG.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        resultadoFG.setForeground(new java.awt.Color(255, 255, 255));
        resultadoFG.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        resultadoFG.setText("-%");
        panelFg.add(resultadoFG, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 150, 40));

        javax.swing.GroupLayout donaFgLayout = new javax.swing.GroupLayout(donaFg);
        donaFg.setLayout(donaFgLayout);
        donaFgLayout.setHorizontalGroup(
            donaFgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 150, Short.MAX_VALUE)
        );
        donaFgLayout.setVerticalGroup(
            donaFgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 130, Short.MAX_VALUE)
        );

        panelFg.add(donaFg, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 150, 130));

        fondoFg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/newFondoFg.png"))); // NOI18N
        panelFg.add(fondoFg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 13, 17, 13);
        ContenedorCajasResultados.add(panelFg, gridBagConstraints);

        panelTs.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtTs.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        txtTs.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtTs.setText("%TS");
        panelTs.add(txtTs, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 160, 30));

        resultadoTs.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        resultadoTs.setForeground(new java.awt.Color(255, 255, 255));
        resultadoTs.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        resultadoTs.setText("-%");
        panelTs.add(resultadoTs, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 160, -1));

        javax.swing.GroupLayout donaTsLayout = new javax.swing.GroupLayout(donaTs);
        donaTs.setLayout(donaTsLayout);
        donaTsLayout.setHorizontalGroup(
            donaTsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 150, Short.MAX_VALUE)
        );
        donaTsLayout.setVerticalGroup(
            donaTsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 130, Short.MAX_VALUE)
        );

        panelTs.add(donaTs, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 150, 130));

        fondoTs.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/newFondoTs.png"))); // NOI18N
        panelTs.add(fondoTs, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 180, 250));

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 13, 0, 13);
        ContenedorCajasResultados.add(panelTs, gridBagConstraints);

        panelValoration.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtValoration.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        txtValoration.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtValoration.setText("Valoracion:");
        panelValoration.add(txtValoration, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 160, -1));

        resultadoValoration.setBackground(new java.awt.Color(255, 255, 255));
        resultadoValoration.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        resultadoValoration.setForeground(new java.awt.Color(255, 255, 255));
        resultadoValoration.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        resultadoValoration.setText("-%");
        panelValoration.add(resultadoValoration, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 150, 30));

        javax.swing.GroupLayout donaValorationLayout = new javax.swing.GroupLayout(donaValoration);
        donaValoration.setLayout(donaValorationLayout);
        donaValorationLayout.setHorizontalGroup(
            donaValorationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 150, Short.MAX_VALUE)
        );
        donaValorationLayout.setVerticalGroup(
            donaValorationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 130, Short.MAX_VALUE)
        );

        panelValoration.add(donaValoration, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 150, 130));

        fondoValoration.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/newFondoValoration.png"))); // NOI18N
        panelValoration.add(fondoValoration, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 180, 250));

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 13, 0, 13);
        ContenedorCajasResultados.add(panelValoration, gridBagConstraints);

        PantallaResultados.add(ContenedorCajasResultados, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 60, 620, 520));

        cabeceraResultados.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        cabeceraResultados.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/IconoResultado.png"))); // NOI18N
        cabeceraResultados.setText("Resultados:");
        PantallaResultados.add(cabeceraResultados, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 0, 260, -1));

        botonExcel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logoExcel.png"))); // NOI18N
        botonExcel1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                botonExcel1FocusGained(evt);
            }
        });
        botonExcel1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonExcel1ActionPerformed(evt);
            }
        });
        PantallaResultados.add(botonExcel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 580, -1, -1));

        botonExportar.setText("Exportar");
        botonExportar.setToolTipText("");
        botonExportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonExportarActionPerformed(evt);
            }
        });
        PantallaResultados.add(botonExportar, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 600, -1, -1));

        graphicsLineButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/iconoGraficoLineas.png"))); // NOI18N
        graphicsLineButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                graphicsLineButtonActionPerformed(evt);
            }
        });
        PantallaResultados.add(graphicsLineButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 590, -1, -1));

        graphicsBarLineButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/iconoGraficos.png"))); // NOI18N
        graphicsBarLineButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                graphicsBarLineButtonActionPerformed(evt);
            }
        });
        PantallaResultados.add(graphicsBarLineButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 590, -1, -1));

        javax.swing.GroupLayout tabValoracionLayout = new javax.swing.GroupLayout(tabValoracion);
        tabValoracion.setLayout(tabValoracionLayout);
        tabValoracionLayout.setHorizontalGroup(
            tabValoracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabValoracionLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(PantallaResultados, javax.swing.GroupLayout.PREFERRED_SIZE, 689, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );
        tabValoracionLayout.setVerticalGroup(
            tabValoracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabValoracionLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(PantallaResultados, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(41, 41, 41))
        );

        jTabbedPane1.addTab("Resultados", tabValoracion);

        javax.swing.GroupLayout PantallaPrincipalLayout = new javax.swing.GroupLayout(PantallaPrincipal);
        PantallaPrincipal.setLayout(PantallaPrincipalLayout);
        PantallaPrincipalLayout.setHorizontalGroup(
            PantallaPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelCabecera, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jTabbedPane1)
        );
        PantallaPrincipalLayout.setVerticalGroup(
            PantallaPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PantallaPrincipalLayout.createSequentialGroup()
                .addComponent(panelCabecera, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 697, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.getAccessibleContext().setAccessibleDescription("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(PantallaPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PantallaPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    /**
     * Genera un los graficos de las donas de manera generica, cuando ya no hay
     * ningun valor que pueda convertir.
     */
    private void generateGenericGraphics(){
        DefaultPieDataset<String> dataset = cg.createDataset(100.0, 0.0);
        
        Color[] backgroundsColors = {new Color(0x41198C), new Color(0x8C1919),new Color(0x3C8C19),new Color(0xBBAA3F)};
        JPanel[] paneles = {donaEfg,donaFg,donaTs,donaValoration};
        for (int i = 0; i < paneles.length;i++){
            JFreeChart genericChart = cg.createChart(dataset, new Color(0xB21B1B),backgroundsColors[i] );
            addChartToPanel(genericChart,paneles[i]);
        }
    }
    
    /**
     * Añade un grafico a un panel, el que yo quiera.
     * @param chart
     * @param panel 
     */
    private void addChartToPanel(JFreeChart chart, JPanel panel) {
        ChartPanel chartPanel = new ChartPanel(chart);
        chartPanel.setPreferredSize(panel.getSize()); // Ajusta el tamaño al del panel
        // chartPanel.setMouseWheelEnabled(false);
        panel.setLayout(new BorderLayout());
        panel.removeAll();
        panel.add(chartPanel, BorderLayout.CENTER);
        panel.validate();
    }
    
    /**
     * Este metodo obtiene todos los datos importantes y lo guarda en una lista
     * @return Retorna la lista con los datos relevantes.
     */
    private ArrayList<String> getData(){
        String equipo = (String) comboEquipos.getSelectedItem();
        String jugador = (String) comboJugadores.getSelectedItem();
        String tca = spinnerTca.getValue().toString();
        String t3a = spinnerT3a.getValue().toString();
        String tci = spinnerTci.getValue().toString();
        String tli = spinnerTli.getValue().toString();
        String p = spinnerP.getValue().toString();
        String fg = resultadoFG.getText();
        String efg = resultadoEFG.getText();
        String ts = resultadoTs.getText();
        String valoration = resultadoValoration.getText();
        
        return new ArrayList<>(Arrays.asList(
                equipo,
                jugador, 
                tca, 
                t3a, 
                tci, 
                tli, 
                p, 
                fg.substring(0,fg.length() - 1), 
                efg.substring(0,efg.length() - 1), 
                ts.substring(0,ts.length()-1),
                valoration.substring(0,valoration.length() - 2)
        ));
    }    
    
    /**
     * Este metodo obtiene todos los datos y los ordenada en un HashMap,
     * ordenada cada cabecera con su respectivo dato.
     * @return 
     */
    private HashMap<String,String> getHashMapData(){
        ArrayList<String> data = getData();
        ArrayList<String> keys = new ArrayList<>(Arrays.asList(wte.getCabecera()));
        HashMap<String,String> hashMapData= new HashMap<>();
        
        for (int i = 0; i < data.size();i++){
            hashMapData.put(keys.get(i),data.get(i));
        }
        
        return hashMapData;
    }
    
    /**
     * Este método mapea el arbol de directorios de los equipos, con sus respectivos
     * jugadores
     * @return me devuelve un HashMap
     */
    private HashMap<String, HashMap<String, String>> getDirectoryTreeTeams(){
        HashMap<String, String> playerPathsLakers = new HashMap<>();
        // Rutas para los Angeles Lakers
        playerPathsLakers.put("LeBron James", "src/main/resources/images/graficas/Angeles Lakers/LeBron James/");
        playerPathsLakers.put("Anthony Davis", "src/main/resources/images/graficas/Angeles Lakers/Anthony Davis/");
        playerPathsLakers.put("Austin Reaves", "src/main/resources/images/graficas/Angeles Lakers/Austin Reaves/");
        playerPathsLakers.put("D Angelo Russell", "src/main/resources/images/graficas/Angeles Lakers/D Angelo Russell/");
        playerPathsLakers.put("Rui Hachimura", "src/main/resources/images/graficas/Angeles Lakers/Rui Hachimura/");

        HashMap<String, String> playerPathsWarriors = new HashMap<>();
        // Rutas para los Golden State Warriors
        playerPathsWarriors.put("Stephen Curry", "src/main/resources/images/graficas/Golden State Warriors/Stephen Curry/");
        playerPathsWarriors.put("Klay Thompson", "src/main/resources/images/graficas/Golden State Warriors/Klay Thompson/");
        playerPathsWarriors.put("Draymond Green", "src/main/resources/images/graficas/Golden State Warriors/Draymond Green/");
        playerPathsWarriors.put("Andrew Wiggins", "src/main/resources/images/graficas/Golden State Warriors/Andrew Wiggins/");
        playerPathsWarriors.put("Chris Paul", "src/main/resources/images/graficas/Golden State Warriors/Chris Paul/");

        HashMap<String, HashMap<String, String>> teams = new HashMap<>();
        teams.put("Angeles Lakers", playerPathsLakers);
        teams.put("Golden State Warriors", playerPathsWarriors);
        
        return teams;
    }
    
    /**
     * Este metodo es la acción que quiero que haga el botond excel
     */
    private void actionButtonExcel(){
        HashMap<String,String> mapData= getHashMapData();
        
        String[] teams = {"Angeles Lakers", "Golden State Warriors"};
        String pathExcel = wte.selectionPathExcel(teams,mapData);
        
        wte.abrirExcel(pathExcel);
    }
   
    
    private void botonExportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonExportarActionPerformed
            
        HashMap<String,String> mapData= getHashMapData();
        
        System.out.println(mapData);
        
        try {
            String[] teams = {"Angeles Lakers", "Golden State Warriors"};
            String pathExcel = wte.selectionPathExcel(teams,mapData);
            
            wte.escribirDatosInforme(pathExcel,mapData);
        } catch (IOException e) {
            System.out.println("Error exportando datos: " + e.getMessage());
        }
        
    }//GEN-LAST:event_botonExportarActionPerformed

    private void botonCalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCalcularActionPerformed

        // Obtener valores de los tres JTextFields
        int tca = (int) spinnerTca.getValue();
        int t3a = (int) spinnerT3a.getValue();
        int tci = (int) spinnerTci.getValue();
        int tli = (int) spinnerTli.getValue();
        int p = (int) spinnerP.getValue();

        JSpinner[] spinnersGood = {spinnerP,spinnerReb,spinnerAsis,spinnerBr,spinnerTf,spinnerFr};
        int totalGood = 0;
        for (JSpinner spinner : spinnersGood){
            totalGood += (int) spinner.getValue();
        }
        JSpinner[] spinnersBad = {spinnerBp,spinnerTc,spinnerFp};
        int totalBad = 0;
        for (JSpinner spinner : spinnersBad){
            totalBad += (int) spinner.getValue();
        }

        totalBad += (int)spinnerTli.getValue() - (int) spinnerT1a.getValue();
        totalBad += (int)spinnerTci.getValue() - (int) spinnerTca.getValue();
        


        // hacer las respectivas operaciones
        int valoration = totalGood - totalBad;
        double fg = ((double)tca/tci) * 100;
        double efg = ((double)(tca + (0.5 * t3a)) / tci) * 100;
        double ts = ((double) p / (2* (tci + 0.44 * tli))) * 100;
        
        
        // Mostrar Graficos
        DefaultPieDataset<String> datasetFg = cg.createDataset(100.0, fg);
        DefaultPieDataset<String> datasetEfg = cg.createDataset(100.0, efg);
        DefaultPieDataset<String> datasetTs = cg.createDataset(100.0, ts);
        DefaultPieDataset<String> datasetValoration = cg.createDataset(Double.valueOf(totalGood), Double.valueOf(valoration));
        
        DefaultPieDataset[] datasets = {datasetFg, datasetEfg, datasetTs, datasetValoration};
        Color[] backgroundsColors = { new Color(0x8C1919),new Color(0x41198C),new Color(0x3C8C19),new Color(0xBBAA3F)};
        Color[] colors = {new Color(0xB21B1B), new Color(0x8057CD), new Color(0x65BF3F), new Color(0xDBCE78)};
        JPanel[] paneles = {donaFg,donaEfg,donaTs,donaValoration};
        
        for (int i = 0; i < paneles.length;i++){
            JFreeChart genericChart = cg.createChart(datasets[i], colors[i],backgroundsColors[i] );
            addChartToPanel(genericChart,paneles[i]);
        }
        
        
        // Mostrar el resultado en un JLabel
        resultadoValoration.setText(valoration + "Pt");
        resultadoFG.setText(String.format("%.2f",fg) + "%");
        resultadoEFG.setText(String.format("%.2f",efg) + "%");
        resultadoTs.setText(String.format("%.2f",ts) + "%");
    }//GEN-LAST:event_botonCalcularActionPerformed

    private void botonResetearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonResetearActionPerformed
        resultadoEFG.setText("-%");
        resultadoFG.setText("-%");
        resultadoTs.setText("-%");
        resultadoValoration.setText("-%");
        JSpinner[] spinners = {spinnerAsis,spinnerReb,spinnerTf,spinnerBr,spinnerFr,spinnerT1a,spinnerT2a,spinnerT3a,spinnerBp,spinnerTc,spinnerFp,spinnerTli,spinnerT2i,spinnerT3i,spinnerTca,spinnerTci,spinnerP};
        for (JSpinner spinner : spinners){
            spinner.setValue((int) 0);
        }
        
        generateGenericGraphics();
        
    }//GEN-LAST:event_botonResetearActionPerformed

    private void botonExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonExcelActionPerformed
        actionButtonExcel();
    }//GEN-LAST:event_botonExcelActionPerformed

    private void botonExcelFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_botonExcelFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_botonExcelFocusGained

    private void botonExcel1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_botonExcel1FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_botonExcel1FocusGained

    private void botonExcel1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonExcel1ActionPerformed
        actionButtonExcel();
    }//GEN-LAST:event_botonExcel1ActionPerformed
    
    /**
     * Este metodo sirve para cambiar el valor de un spinner que depende de otro,
     * accediendo al dato que ha cambiado y sumandoselo al dependiente.
     * @param focusSpinner Este es el spinner que cambia
     * @param targetSpinner Este es el spinner objetivo el que depende del anterior
     */
    private int handleSpinnerChange(JSpinner focusSpinner, JSpinner targetSpinner) {
        
        int currentValue = (int) focusSpinner.getValue();
        
        int oldValueFocusSpinner = mapOldValuesSpinners.get(focusSpinner);
        
        int targetValue = (int) targetSpinner.getValue();
        
        if (targetSpinner != spinnerP){
            targetValue += (currentValue - oldValueFocusSpinner);
        }else{
            
            HashMap<JSpinner,Integer> pointsSpinner = new HashMap<>();
            pointsSpinner.put(spinnerT1a,1);
            pointsSpinner.put(spinnerT2a,2);
            pointsSpinner.put(spinnerT3a,3);
            
            targetValue += (currentValue - oldValueFocusSpinner) * pointsSpinner.get(focusSpinner);
            
        }
         
        
        targetSpinner.setValue(targetValue);
        
        return currentValue;
        
    }
    
    private void multipleHandleSpinnerChange(JSpinner focusSpinner, JSpinner[] targetsSpinner){
        
        int currentValue = 0;
        for (JSpinner target : targetsSpinner){
            currentValue = handleSpinnerChange(focusSpinner, target);
        }
        
        mapOldValuesSpinners.replace(focusSpinner, currentValue);
    }
    
    private void spinnerT1aStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinnerT1aStateChanged
        JSpinner[] targetsSpinners = {spinnerTli,spinnerP};
        multipleHandleSpinnerChange((JSpinner) evt.getSource(),targetsSpinners);
        
    }//GEN-LAST:event_spinnerT1aStateChanged

    private void spinnerT2aStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinnerT2aStateChanged
        JSpinner[] targetsSpinners = {spinnerT2i,spinnerTca,spinnerP};
        multipleHandleSpinnerChange((JSpinner) evt.getSource(),targetsSpinners);
    }//GEN-LAST:event_spinnerT2aStateChanged

    private void spinnerT3aStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinnerT3aStateChanged
        JSpinner[] targetsSpinners = {spinnerT3i,spinnerTca,spinnerP};
        multipleHandleSpinnerChange((JSpinner) evt.getSource(),targetsSpinners);
    }//GEN-LAST:event_spinnerT3aStateChanged

    private void spinnerTcaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinnerTcaStateChanged
        System.out.println("Evento en spinnerTca");
    }//GEN-LAST:event_spinnerTcaStateChanged

    private void spinnerT2iStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinnerT2iStateChanged
        int currentValue = handleSpinnerChange((JSpinner) evt.getSource(),spinnerTci);
        mapOldValuesSpinners.replace((JSpinner) evt.getSource(), currentValue);
    }//GEN-LAST:event_spinnerT2iStateChanged

    private void spinnerT3iStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinnerT3iStateChanged
        int currentValue = handleSpinnerChange((JSpinner) evt.getSource(),spinnerTci);
        mapOldValuesSpinners.replace((JSpinner) evt.getSource(), currentValue);
    }//GEN-LAST:event_spinnerT3iStateChanged

    private void comboEquiposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboEquiposActionPerformed
        String selection = (String) comboEquipos.getSelectedItem();
      
        if (selection.equals("Angeles Lakers")) {
                comboJugadores.setModel( 
                        new DefaultComboBoxModel<>(new String[]{
                            "LeBron James", 
                            "Anthony Davis", 
                            "Austin Reaves", 
                            "D Angelo Russell", 
                            "Rui Hachimura"
                        }));
        }else if(selection.equals("Golden State Warriors")){            
                comboJugadores.setModel( 
                        new DefaultComboBoxModel<>(new String[]{
                            "Stephen Curry",
                            "Klay Thompson",
                            "Draymond Green",
                            "Andrew Wiggins",
                            "Chris Paul"
                        }));
                
        }
    }//GEN-LAST:event_comboEquiposActionPerformed

    private void graphicsLineButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_graphicsLineButtonActionPerformed
        
        HashMap<String,String> mapData= getHashMapData();
        
        System.out.println(mapData.get("Equipo"));
        
        List<Double> nums = gde.getData(mapData.get("Equipo"),mapData.get("Jugador"),"Valoration");
        
        // Creamos un grafico de barras y lineas combinado
        DefaultCategoryDataset dataset = clc.createDataset(nums);

        // Creamos el gráfico de líneas con los datos
        JFreeChart chart = clc.createLineChart(dataset, "Gráfico de Líneas", Color.BLUE, Color.LIGHT_GRAY);

        // Ruta relativa de la imagen donde se guardará
        String relativePath = teamsDirectory.get(mapData.get("Equipo")).get(mapData.get("Jugador"));
        
        saveAndShowInJFrame(chart,relativePath,"Valoration",mapData.get("Equipo"));

    }//GEN-LAST:event_graphicsLineButtonActionPerformed

    private void graphicsBarLineButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_graphicsBarLineButtonActionPerformed
                
        HashMap<String,String> mapData= getHashMapData();
        
        System.out.println(mapData.get("Equipo"));
        List<Double> nums = gde.getData(mapData.get("Equipo"),mapData.get("Jugador"),"Puntos");
        
        // Creamos un grafico de barras y lineas combinado
        JFreeChart chart = cce.createCombinedChart("Puntos:" + mapData.get("Jugador"), "Puntos", nums);

        // Ruta relativa de la imagen donde se guardará
        String relativePath = teamsDirectory.get(mapData.get("Equipo")).get(mapData.get("Jugador"));
        
        saveAndShowInJFrame(chart,relativePath,"Puntos",mapData.get("Equipo"));
        
    }//GEN-LAST:event_graphicsBarLineButtonActionPerformed
    
    /**
     * Este método guarda en la ruta y muestra en un jframe el chart
     * @param chart es un JFreeChart donde se guarda el grafico que he creado
     * @param savePath ruta de donde quiero guardar el grafico
     * @param nameTeam nombre del equipo
     */
    private void saveAndShowInJFrame(JFreeChart chart, String relativePath, String stadisticType, String nameTeam){
        
        String basePath = System.getProperty("user.dir"); // Directorio base del proyecto
        String savePath = basePath + "/" + relativePath + stadisticType + ".png";
        
        cce.saveChartAsPNG(chart, savePath); 
        
        // Crear un JFrame para mostrar el gráfico en una ventana
        JFrame frame = new JFrame(nameTeam);
        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        frame.setSize(800, 600); // Tamaño de la ventana

        // Crear un ChartPanel y añadirlo al JFrame
        ChartPanel chartPanel = new ChartPanel(chart);
        frame.add(chartPanel);

        // Hacer visible el JFrame
        frame.setLocationRelativeTo(null);  // Centrar la ventana
        frame.setVisible(true);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfazBaloncesto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfazBaloncesto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfazBaloncesto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfazBaloncesto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InterfazBaloncesto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel ContenedorCajasResultados;
    private javax.swing.JPanel PantallaDatos;
    private javax.swing.JPanel PantallaDatos1;
    private javax.swing.JPanel PantallaPrincipal;
    private javax.swing.JPanel PantallaResultados;
    private javax.swing.JButton botonCalcular;
    private javax.swing.JButton botonExcel;
    private javax.swing.JButton botonExcel1;
    private javax.swing.JButton botonExportar;
    private javax.swing.JButton botonGlosario;
    private javax.swing.JButton botonResetear;
    private javax.swing.JLabel cabeceraDatos;
    private javax.swing.JLabel cabeceraResultados;
    private javax.swing.JComboBox<String> comboEquipos;
    private javax.swing.JComboBox<String> comboJugadores;
    private javax.swing.JPanel donaEfg;
    private javax.swing.JPanel donaFg;
    private javax.swing.JPanel donaTs;
    private javax.swing.JPanel donaValoration;
    private javax.swing.JLabel fondoDatos;
    private javax.swing.JLabel fondoDatos1;
    private javax.swing.JLabel fondoEfg;
    private javax.swing.JLabel fondoFg;
    private javax.swing.JLabel fondoTs;
    private javax.swing.JLabel fondoValoration;
    private javax.swing.JButton graphicsBarLineButton;
    private javax.swing.JButton graphicsLineButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel panelCabecera;
    private javax.swing.JPanel panelEfg;
    private javax.swing.JPanel panelFg;
    private javax.swing.JPanel panelFormulario;
    private javax.swing.JPanel panelFormulario1;
    private javax.swing.JPanel panelTs;
    private javax.swing.JPanel panelValoration;
    private javax.swing.JLabel resultadoEFG;
    private javax.swing.JLabel resultadoFG;
    private javax.swing.JLabel resultadoTs;
    private javax.swing.JLabel resultadoValoration;
    private javax.swing.JSpinner spinnerAsis;
    private javax.swing.JSpinner spinnerBp;
    private javax.swing.JSpinner spinnerBr;
    private javax.swing.JSpinner spinnerFp;
    private javax.swing.JSpinner spinnerFr;
    private javax.swing.JSpinner spinnerP;
    private javax.swing.JSpinner spinnerReb;
    private javax.swing.JSpinner spinnerT1a;
    private javax.swing.JSpinner spinnerT2a;
    private javax.swing.JSpinner spinnerT2i;
    private javax.swing.JSpinner spinnerT3a;
    private javax.swing.JSpinner spinnerT3i;
    private javax.swing.JSpinner spinnerTc;
    private javax.swing.JSpinner spinnerTca;
    private javax.swing.JSpinner spinnerTci;
    private javax.swing.JSpinner spinnerTf;
    private javax.swing.JSpinner spinnerTli;
    private javax.swing.JPanel tabEstadisticas;
    private javax.swing.JPanel tabValoracion;
    private javax.swing.JLabel txtAsis;
    private javax.swing.JLabel txtBp;
    private javax.swing.JLabel txtBr;
    private javax.swing.JLabel txtEfg;
    private javax.swing.JLabel txtEquipo;
    private javax.swing.JLabel txtFg;
    private javax.swing.JLabel txtFr;
    private javax.swing.JLabel txtJugador;
    private javax.swing.JLabel txtP;
    private javax.swing.JLabel txtReb;
    private javax.swing.JLabel txtT1A;
    private javax.swing.JLabel txtT2a;
    private javax.swing.JLabel txtT2i;
    private javax.swing.JLabel txtT3a;
    private javax.swing.JLabel txtT3i;
    private javax.swing.JLabel txtTc;
    private javax.swing.JLabel txtTca;
    private javax.swing.JLabel txtTci;
    private javax.swing.JLabel txtTf;
    private javax.swing.JLabel txtTli;
    private javax.swing.JLabel txtTs;
    private javax.swing.JLabel txtValoration;
    // End of variables declaration//GEN-END:variables
}
